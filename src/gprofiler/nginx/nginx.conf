worker_processes 32;
worker_rlimit_nofile 100000;
pid /run/nginx.pid;

error_log /tmp/nginx/debug.log info;

events {
  use epoll;
  worker_connections 10240;
  multi_accept on;
}

http {
  open_file_cache max=10000 inactive=300s;
  open_file_cache_valid 360s;
  open_file_cache_min_uses 2;
  open_file_cache_errors off;

  reset_timedout_connection on; # allow the server to close connection on non responding client, this will free up memory
  # Timeouts for downloading files. Extra long because of svg creation times...
  proxy_read_timeout 300;
  proxy_connect_timeout 300;
  proxy_send_timeout 300;
  client_header_timeout 300;
  client_body_timeout 300; # request timed out -- default 60
  send_timeout 300; # if client stop responding, free up memory -- default 60
  keepalive_timeout 300; # server will close connection after this time
  sendfile on;
  sendfile_max_chunk 1m;
  tcp_nopush on;
  tcp_nodelay       on;
  # https://ssl-config.mozilla.org/#server=nginx&server-version=1.17.0&config=intermediate
  ssl_protocols       TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 1d;
  ssl_session_tickets off;
  ssl_dhparam /usr/src/app/certs/dhparam.pem;
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8 valid=300s;
  resolver_timeout 5s;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";

  # Fixes a bug with Nginx not sending resources to the browser
  gzip on;
  gzip_vary on;
  gzip_types text/html application/json image/x-icon application/javascript image/svg+xml text/javascript text/css text/xml application/x-javascript application/xml;
  add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
  expires off;

  # https://cipherli.st/
  ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
  ssl_ecdh_curve secp384r1;


  # Map for handling X-Forwarded-Proto from load balancer
  map $http_x_forwarded_proto $forwarded_proto {
    default $http_x_forwarded_proto;
    "" $scheme;
  }

  upstream api {
    server unix:/tmp/mysite.sock;
  }

  server {
    listen 80 backlog=4096 reuseport default_server;

    gzip on;
    add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    add_header 'Strict-Transport-Security' 'max-age=31536000; includeSubDomains';
    expires off;

    location /api {
      client_max_body_size 100M; # collapsed stacktrace files may be large at times.
      gzip_static on;
      gzip on;
      gzip_vary on;
      gzip_types text/plain application/json image/x-icon application/javascript image/svg+xml text/html text/javascript;

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $forwarded_proto;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://api;
    }

    location /latest {
        deny all;
        return 403; # Optional: return a 403 Forbidden status code
    }

    location / {
      location /static {
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          etag on;
          access_log off;
          add_header Cache-Control "public";
        }
      }

      root /usr/src/app/frontend;
      try_files $uri $uri/ /index.html =404;
      include /etc/nginx/mime.types;
      gzip_static on;
      gzip on;
      gzip_vary on;
      gzip_types text/html application/json image/x-icon application/javascript image/svg+xml text/javascript text/css text/xml application/x-javascript application/xml;
    }
  }
}
